name: Build, Scan, and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.get-digest.outputs.digest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          load: true # Important: this will load the built image into the runner's Docker environment
          tags: your-image:latest

      # Save the image digest for use in the push-to-registry job
      - name: Get image digest
        id: get-digest
        run: echo "::set-output name=digest::$(docker inspect --format='{{index .RepoDigests 0}}' your-image:latest)"

      - name: Scan the image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'your-image:latest'
          format: 'table'
          exit-code: '1' # Set to '1' to fail the workflow if vulnerabilities are found
          ignore-unfixed: true # Optional: ignore unfixed vulnerabilities

  # This job runs only after manual approval if the build-and-scan job succeeded
  push-to-registry:
    runs-on: ubuntu-latest
    needs: build-and-scan
    if: ${{ success() && github.event_name == 'push' }}
    environment:
      name: production
      url: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/your-repository
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Google Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Pull the Docker image from job 1
        run: docker pull ${{ needs.build-and-scan.outputs.image-digest }}

      - name: Tag the Docker image
        run: docker tag ${{ needs.build-and-scan.outputs.image-digest }} ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/your-repository/your-image:latest

      - name: Push to Google Artifact Registry
        run: docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/your-repository/your-image:latest
